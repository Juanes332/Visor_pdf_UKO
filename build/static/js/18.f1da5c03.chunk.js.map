{"version":3,"sources":["app/components/PDFViewer/FileUploader.jsx","app/components/PDFViewer/SignatureModal.jsx","app/components/PDFViewer/SignatureField.jsx","app/components/PDFViewer/ModalFirmaSuccess.jsx","app/components/PDFViewer/PDFViewer.jsx","app/views/dashboard/Analytics.jsx"],"names":["FileUploader","_ref","onFilesSelected","_useState","useState","_useState2","_slicedToArray","isDragging","setIsDragging","_useState3","_useState4","snackbarMessage","setSnackbarMessage","fileInputRef","useRef","handleFileValidation","files","i","length","type","current","value","size","_jsxs","style","display","flexDirection","alignItems","marginBottom","padding","border","textAlign","cursor","background","borderRadius","onDrop","e","preventDefault","dataTransfer","onDragOver","onDragLeave","children","_jsx","Button","variant","backgroundColor","onClick","click","accept","multiple","onChange","target","ref","Snackbar","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert","severity","useStyles","makeStyles","theme","paper","position","width","palette","boxShadow","shadows","spacing","getModalStyle","top","concat","left","transform","SignatureModal","isOpen","onSave","classes","_React$useState","React","modalStyle","sigCanvas","Modal","className","SignatureCanvas","canvasProps","height","onMouseDown","stopPropagation","clear","getTrimmedCanvas","toDataURL","defaultPosition","SignatureField","id","documentId","pageNumber","onRemove","initialPosition","onPositionChange","savedSignature","localStorage","getItem","signatureImage","setSignatureImage","isModalOpen","setIsModalOpen","_useState5","color","Math","floor","random","getRandomColor","_useState6","fieldBackground","setFieldBackground","_useState7","_objectSpread","_useState8","setSize","useEffect","savedSize","JSON","parse","fieldStyle","justifyContent","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","resizeDotStyle","Rnd","x","y","default","bounds","minWidth","minHeight","maxWidth","maxHeight","onResizeStop","direction","delta","newSize","setItem","stringify","onDragStop","d","prevSize","enableResizing","topLeft","topRight","bottomLeft","bottomRight","lockAspectRatio","onDoubleClick","right","bottom","signature","existingSignature","modal","successIcon","fontSize","ModalFirmaSuccess","handleClose","navigateHome","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","CheckCircleOutlineIcon","pdfjs","GlobalWorkerOptions","workerSrc","version","container","overflow","pdfViewer","flex","miniatures","thumbnailImage","documentButton","thumbnailStyle","margin","addButton","marginTop","textTransform","PdfViewer","_selectedFiles$curren","_signatureFields$curr","currentFileIndex","setCurrentFileIndex","numPages","setNumPages","setPageNumber","selectedFiles","setSelectedFiles","_useState9","_useState10","showFileUploader","setShowFileUploader","_useState11","_useState12","selectedDocument","setSelectedDocument","_useState13","_useState14","signatureFields","setSignatureFields","_useState15","_useState16","documentNames","setDocumentNames","documentContainerRef","_useState17","_useState18","modalOpen","setModalOpen","useTheme","isMobile","useMediaQuery","breakpoints","down","handleCloseModal","navigate","useNavigate","newSignatureFields","handleBackToUploader","currentDocumentId","name","Container","Array","from","pagesPromises","map","file","Promise","resolve","reject","reader","FileReader","onload","event","typedArray","Uint8Array","result","getDocument","promise","then","pdf","catch","onerror","readAsArrayBuffer","names","all","pages","Grid","item","xs","sm","Document","onLoadSuccess","prevPages","updatedPages","_toConsumableArray","Page","renderTextLayer","renderAnnotationLayer","IconButton","disabled","ChevronLeftIcon","ChevronRightIcon","Paper","overflowY","List","index","isSelected","documentName","ListItem","button","ListItemText","primary","numPagesForFile","thumbnailPromises","_","ListItemIcon","newField","uuidv4","prevFields","_defineProperty","filter","field","idToRemove","handlePositionChange","onSizeChange","handleSizeChange","Analytics","_Fragment"],"mappings":"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","file":"static/js/18.f1da5c03.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { Button, Snackbar } from '@mui/material';\r\nimport Alert from '@mui/material/Alert';\r\n\r\nconst FileUploader = ({ onFilesSelected }) => {\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = useState(null);\r\n  const fileInputRef = useRef(null);\r\n\r\n  const handleFileValidation = (files) => {\r\n    for (let i = 0; i < files.length; i++) {\r\n      if (files[i].type !== 'application/pdf') {\r\n        // Verificar si el archivo NO es de tipo PDF\r\n        setSnackbarMessage('Solo se permiten archivos PDF.');\r\n        fileInputRef.current.value = ''; // Reseteamos el valor del input\r\n        return;\r\n      }\r\n      if (files[i].size > 10 * 1024 * 1024) {\r\n        // 10MB en bytes\r\n        setSnackbarMessage('No se pueden subir archivos mayores a 10MB.');\r\n        fileInputRef.current.value = ''; // Reseteamos el valor del input\r\n        return;\r\n      }\r\n    }\r\n    onFilesSelected(files);\r\n    fileInputRef.current.value = ''; // También lo reseteamos aquí para cuando los archivos son válidos\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const files = e.target.files;\r\n    handleFileValidation(files);\r\n  };\r\n\r\n  const handleFileDrop = (e) => {\r\n    e.preventDefault();\r\n    const files = e.dataTransfer.files;\r\n    handleFileValidation(files);\r\n    setIsDragging(false);\r\n  };\r\n\r\n  const handleDragOver = (e) => {\r\n    e.preventDefault();\r\n    setIsDragging(true);\r\n  };\r\n\r\n  const handleDragLeave = () => {\r\n    setIsDragging(false);\r\n  };\r\n\r\n  const openFileDialog = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        marginBottom: '620px',\r\n        padding: '120px',\r\n        border: '5px dashed #ccc',\r\n        textAlign: 'center',\r\n        cursor: 'pointer',\r\n        background: isDragging ? '#f2f2f2' : 'white',\r\n        borderRadius: '4px',\r\n      }}\r\n      onDrop={handleFileDrop}\r\n      onDragOver={handleDragOver}\r\n      onDragLeave={handleDragLeave}\r\n    >\r\n      <div style={{ marginBottom: '10px' }}>Arrastra y suelta archivos PDF aquí</div>\r\n      <div style={{ marginBottom: '10px' }}>o</div>\r\n      <Button variant=\"contained\" style={{ backgroundColor: '#ff9e43' }} onClick={openFileDialog}>\r\n        Selecciona archivos\r\n      </Button>\r\n      <input\r\n        type=\"file\"\r\n        accept=\".pdf\"\r\n        multiple\r\n        onChange={handleFileChange}\r\n        ref={fileInputRef}\r\n        style={{ display: 'none' }}\r\n      />\r\n      <Snackbar\r\n        open={!!snackbarMessage}\r\n        autoHideDuration={6000}\r\n        onClose={() => setSnackbarMessage(null)}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      >\r\n        <Alert\r\n          onClose={() => setSnackbarMessage(null)}\r\n          severity={snackbarMessage === 'Solo se permiten archivos PDF.' ? 'warning' : 'error'}\r\n        >\r\n          {snackbarMessage}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUploader;\r\n","import React, { useRef } from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from '@material-ui/core/Button';\r\nimport SignatureCanvas from 'react-signature-canvas';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst SignatureModal = ({ isOpen, onClose, onSave }) => {\r\n  const classes = useStyles();\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const sigCanvas = useRef({});\r\n\r\n  const clear = () => {\r\n    sigCanvas.current.clear();\r\n  };\r\n\r\n  const save = () => {\r\n    onSave(sigCanvas.current.getTrimmedCanvas().toDataURL('image/png'));\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Modal open={isOpen} onClose={onClose}>\r\n      <div style={modalStyle} className={classes.paper}>\r\n        <h2>Firma Aquí</h2>\r\n        <SignatureCanvas\r\n          ref={sigCanvas}\r\n          canvasProps={{\r\n            width: 500,\r\n            height: 200,\r\n            className: 'sigCanvas',\r\n            onMouseDown: (e) => e.stopPropagation(),\r\n          }}\r\n        />\r\n        <div>\r\n          <Button onClick={clear}>Borrar</Button>\r\n          <Button onClick={save}>Guardar</Button>\r\n          <Button onClick={onClose}>Cancelar</Button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default SignatureModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Rnd } from 'react-rnd';\r\nimport SignatureModal from './SignatureModal';\r\n\r\nlet defaultPosition = {\r\n  width: 200,\r\n  height: 50,\r\n};\r\n\r\n// Función para generar un color aleatorio\r\nconst getRandomColor = () => {\r\n  const letters = '0123456789ABCDEF';\r\n  let color = '#';\r\n  for (let i = 0; i < 6; i++) {\r\n    color += letters[Math.floor(Math.random() * 16)];\r\n  }\r\n  return color;\r\n};\r\n\r\nconst SignatureField = ({\r\n  id,\r\n  documentId,\r\n  pageNumber,\r\n  onRemove,\r\n  initialPosition,\r\n  onPositionChange,\r\n}) => {\r\n  const savedSignature = localStorage.getItem(`signature-${documentId}-${pageNumber}-${id}`);\r\n  const [signatureImage, setSignatureImage] = useState(savedSignature);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [fieldBackground, setFieldBackground] = useState(getRandomColor());\r\n  const [size, setSize] = useState({\r\n    width: defaultPosition.width,\r\n    height: defaultPosition.height,\r\n    ...initialPosition,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const savedSize = localStorage.getItem(`signature-size-${documentId}-${pageNumber}-${id}`);\r\n    if (savedSize) {\r\n      setSize(JSON.parse(savedSize));\r\n    }\r\n  }, [id, documentId, pageNumber]);\r\n\r\n  const onResizeStop = (e, direction, ref, delta, position) => {\r\n    const newSize = {\r\n      width: ref.style.width,\r\n      height: ref.style.height,\r\n      ...position,\r\n    };\r\n    setSize(newSize);\r\n    localStorage.setItem(\r\n      `signature-size-${documentId}-${pageNumber}-${id}`,\r\n      JSON.stringify(newSize)\r\n    );\r\n  };\r\n\r\n  const openModal = () => setIsModalOpen(true);\r\n  const closeModal = () => setIsModalOpen(false);\r\n  const saveSignature = (signature) => {\r\n    setSignatureImage(signature);\r\n    localStorage.setItem(`signature-${documentId}-${pageNumber}-${id}`, signature);\r\n    setFieldBackground('transparent');\r\n  };\r\n\r\n  const fieldStyle = {\r\n    border: '1px solid black',\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    position: 'relative',\r\n    backgroundColor: signatureImage ? 'transparent' : fieldBackground,\r\n    backgroundImage: `url(${signatureImage})`,\r\n    backgroundSize: 'contain',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center',\r\n  };\r\n\r\n  const resizeDotStyle = {\r\n    position: 'absolute',\r\n    width: '10px',\r\n    height: '10px',\r\n    background: '#fff',\r\n    border: '1px solid #007bff',\r\n    borderRadius: '50%', // Hace que tenga forma circular\r\n  };\r\n\r\n  return (\r\n    <Rnd\r\n      size={{ width: size.width, height: size.height }}\r\n      position={{ x: size.x, y: size.y }}\r\n      default={{\r\n        ...defaultPosition,\r\n        x: initialPosition.x,\r\n        y: initialPosition.y,\r\n      }}\r\n      bounds=\".documentContainer\"\r\n      minWidth={32.1094}\r\n      minHeight={30.8594}\r\n      maxWidth={380.172}\r\n      maxHeight={200.431}\r\n      onResizeStop={onResizeStop}\r\n      onDragStop={(e, d) => {\r\n        setSize((prevSize) => ({ ...prevSize, x: d.x, y: d.y }));\r\n        localStorage.setItem(\r\n          `signature-size-${documentId}-${pageNumber}-${id}`,\r\n          JSON.stringify({ ...size, x: d.x, y: d.y })\r\n        );\r\n        if (onPositionChange) {\r\n          onPositionChange(d.x, d.y);\r\n        }\r\n      }}\r\n      enableResizing={{\r\n        topLeft: true,\r\n        topRight: true,\r\n        bottomLeft: true,\r\n        bottomRight: true,\r\n      }}\r\n      lockAspectRatio={true}\r\n    >\r\n      <div style={{ ...fieldStyle, border: '1px solid #007bff' }} onDoubleClick={openModal}>\r\n        {!signatureImage && <span>Signature</span>}\r\n        <button\r\n          style={{\r\n            position: 'absolute',\r\n            right: 0,\r\n            top: 0,\r\n            background: 'red',\r\n            color: 'white',\r\n            border: 'none',\r\n            cursor: 'pointer',\r\n          }}\r\n          onClick={onRemove}\r\n        >\r\n          X\r\n        </button>\r\n        <div style={{ ...resizeDotStyle, top: '-5px', left: '-5px' }} />\r\n        <div style={{ ...resizeDotStyle, top: '-5px', right: '-5px' }} />\r\n        <div style={{ ...resizeDotStyle, bottom: '-5px', left: '-5px' }} />\r\n        <div style={{ ...resizeDotStyle, bottom: '-5px', right: '-5px' }} />\r\n      </div>\r\n      {isModalOpen && (\r\n        <SignatureModal\r\n          isOpen={isModalOpen}\r\n          onClose={closeModal}\r\n          onSave={saveSignature}\r\n          existingSignature={signatureImage}\r\n        />\r\n      )}\r\n    </Rnd>\r\n  );\r\n};\r\n\r\nexport default SignatureField;\r\n","import React from 'react';\r\nimport { makeStyles, Modal, Backdrop, Fade, Button } from '@material-ui/core';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  successIcon: {\r\n    color: 'green',\r\n    fontSize: '4rem',\r\n  },\r\n}));\r\n\r\nconst ModalFirmaSuccess = ({ open, handleClose, navigateHome }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"transition-modal-title\"\r\n      aria-describedby=\"transition-modal-description\"\r\n      className={classes.modal}\r\n      open={open}\r\n      onClose={handleClose}\r\n      closeAfterTransition\r\n      BackdropComponent={Backdrop}\r\n      BackdropProps={{\r\n        timeout: 500,\r\n      }}\r\n    >\r\n      <Fade in={open}>\r\n        <div className={classes.paper}>\r\n          <CheckCircleOutlineIcon className={classes.successIcon} />\r\n          <h2 id=\"transition-modal-title\">Has firmado de manera exitosa</h2>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={navigateHome}>\r\n            Seguir firmando archivos\r\n          </Button>\r\n        </div>\r\n      </Fade>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalFirmaSuccess;\r\n","import React, { useState, useRef } from 'react';\r\nimport { Document, Page, pdfjs } from 'react-pdf';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Paper,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  IconButton,\r\n  useMediaQuery,\r\n  useTheme,\r\n  makeStyles,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport FileUploader from './FileUploader';\r\nimport SignatureField from './SignatureField';\r\nimport ModalFirmaSuccess from './ModalFirmaSuccess';\r\n\r\nimport './pdf.css';\r\n\r\nfunction getRandomColor() {\r\n  const letters = '0123456789ABCDEF';\r\n  let color = '#';\r\n  for (let i = 0; i < 6; i++) {\r\n    color += letters[Math.floor(Math.random() * 16)];\r\n  }\r\n  return color;\r\n}\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    minHeight: '100vh',\r\n    overflow: 'hidden',\r\n  },\r\n  pdfViewer: {\r\n    flex: 1,\r\n  },\r\n  miniatures: {\r\n    display: 'block',\r\n    overflow: 'auto',\r\n  },\r\n  thumbnailImage: {\r\n    width: '100%',\r\n    cursor: 'pointer',\r\n  },\r\n  documentButton: {\r\n    cursor: 'pointer',\r\n    marginBottom: '5px',\r\n  },\r\n  thumbnailStyle: {\r\n    margin: '5px 0',\r\n    borderRadius: '5px',\r\n    boxShadow: '0 3px 6px rgba(0, 0, 0, 0.1)',\r\n  },\r\n  addButton: {\r\n    marginTop: theme.spacing(2),\r\n    backgroundColor: '#1976D2',\r\n    color: 'white',\r\n    padding: '5px 15px',\r\n    textTransform: 'none',\r\n    fontSize: '0.8rem',\r\n    '&:hover': {\r\n      backgroundColor: '#1565C0',\r\n    },\r\n  },\r\n}));\r\n\r\nconst PdfViewer = () => {\r\n  const classes = useStyles();\r\n  const [currentFileIndex, setCurrentFileIndex] = useState(0);\r\n  const [numPages, setNumPages] = useState([]);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n  const [showFileUploader, setShowFileUploader] = useState(true);\r\n  const [selectedDocument, setSelectedDocument] = useState(null);\r\n  const [signatureFields, setSignatureFields] = useState(\r\n    JSON.parse(localStorage.getItem('signatureFields')) || {}\r\n  );\r\n  const [documentNames, setDocumentNames] = useState([]);\r\n  const documentContainerRef = useRef(null);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  const handleOpenModal = () => {\r\n    setModalOpen(true);\r\n  };\r\n\r\n  // Función para cerrar el modal\r\n  const handleCloseModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n  const navigate = useNavigate();\r\n\r\n  let newSignatureFields = [];\r\n\r\n  const handleDocumentSelect = (documentIndex) => {\r\n    setSelectedDocument(documentIndex);\r\n  };\r\n\r\n  const handlePreviousPage = () => {\r\n    if (pageNumber > 1) {\r\n      setPageNumber(pageNumber - 1);\r\n    }\r\n  };\r\n\r\n  const handleNextPage = () => {\r\n    if (pageNumber < numPages[currentFileIndex]) {\r\n      setPageNumber(pageNumber + 1);\r\n    }\r\n  };\r\n\r\n  const handleFilesSelected = (files) => {\r\n    setSelectedFiles(Array.from(files));\r\n    setShowFileUploader(false);\r\n    setCurrentFileIndex(0);\r\n\r\n    const pagesPromises = Array.from(files).map((file) => {\r\n      return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onload = (event) => {\r\n          const typedArray = new Uint8Array(event.target.result);\r\n          pdfjs\r\n            .getDocument(typedArray)\r\n            .promise.then((pdf) => {\r\n              resolve(pdf.numPages);\r\n            })\r\n            .catch(reject);\r\n        };\r\n        reader.onerror = reject;\r\n        reader.readAsArrayBuffer(file);\r\n      });\r\n    });\r\n\r\n    const names = Array.from(files).map((file) => file.name);\r\n    setDocumentNames(names);\r\n\r\n    Promise.all(pagesPromises).then((pages) => {\r\n      setNumPages(pages);\r\n    });\r\n  };\r\n\r\n  const handleBackToUploader = () => {\r\n    setSelectedFiles([]);\r\n    setSignatureFields([]); // Esto limpiará los campos de firma\r\n    setShowFileUploader(true);\r\n    setSelectedDocument(null);\r\n  };\r\n\r\n  const handleThumbnailClick = (page) => {\r\n    setPageNumber(page);\r\n    setCurrentFileIndex(selectedDocument);\r\n  };\r\n\r\n  const handleAddSignatureField = () => {\r\n    const documentId = selectedFiles[currentFileIndex].name;\r\n    const newField = {\r\n      id: uuidv4(),\r\n      pageNumber: pageNumber,\r\n      x: 0,\r\n      y: 0,\r\n      width: 200, // Valor predeterminado para el ancho\r\n      height: 50, // Valor predeterminado para la altura\r\n      backgroundColor: getRandomColor(),\r\n    };\r\n\r\n    setSignatureFields((prevFields) => ({\r\n      ...prevFields,\r\n      [documentId]: [...(prevFields[documentId] || []), newField],\r\n    }));\r\n    // Guardamos el nuevo estado en el localStorage\r\n    localStorage.setItem(\r\n      'signatureFields',\r\n      JSON.stringify({\r\n        ...signatureFields,\r\n        [documentId]: [...(signatureFields[documentId] || []), newField],\r\n      })\r\n    );\r\n  };\r\n\r\n  // Función para manejar la eliminación de un campo de firma\r\n  const handleRemoveSignatureField = (documentId, idToRemove) => {\r\n    setSignatureFields((prevFields) => ({\r\n      ...prevFields,\r\n      [documentId]: prevFields[documentId].filter((field) => field.id !== idToRemove),\r\n    }));\r\n  };\r\n\r\n  const handlePositionChange = (documentId, id, x, y) => {\r\n    setSignatureFields((prevFields) => ({\r\n      ...prevFields,\r\n      [documentId]: prevFields[documentId].map((field) =>\r\n        field.id === id\r\n          ? {\r\n              ...field,\r\n              x: x,\r\n              y: y,\r\n            }\r\n          : field\r\n      ),\r\n    }));\r\n    localStorage.setItem('signatureFields', JSON.stringify(newSignatureFields));\r\n  };\r\n\r\n  const handleSizeChange = (documentId, id, width, height) => {\r\n    setSignatureFields((prevFields) => ({\r\n      ...prevFields,\r\n      [documentId]: prevFields[documentId].map((field) =>\r\n        field.id === id\r\n          ? {\r\n              ...field,\r\n              width,\r\n              height,\r\n            }\r\n          : field\r\n      ),\r\n    }));\r\n    localStorage.setItem('signatureFields', JSON.stringify(signatureFields));\r\n  };\r\n\r\n  const currentDocumentId = selectedFiles[currentFileIndex]?.name;\r\n\r\n  const navigateHome = () => {\r\n    handleCloseModal();\r\n    navigate('/dashboard/firmaya'); // Navega al 'home' que sería la ruta raíz\r\n    handleBackToUploader();\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" className={`pdfContainer`}>\r\n      {showFileUploader ? (\r\n        <FileUploader onFilesSelected={handleFilesSelected} />\r\n      ) : (\r\n        <Grid container spacing={2} className={classes.pdfViewer}>\r\n          <Grid item xs={12} sm={9}>\r\n            {selectedFiles.length > 0 && (\r\n              <Document\r\n                ref={documentContainerRef}\r\n                file={selectedFiles[currentFileIndex]}\r\n                onLoadSuccess={({ numPages }) => {\r\n                  setNumPages((prevPages) => {\r\n                    const updatedPages = [...prevPages];\r\n                    updatedPages[currentFileIndex] = numPages;\r\n                    return updatedPages;\r\n                  });\r\n                }}\r\n                className=\"documentContainer\"\r\n              >\r\n                <Page\r\n                  pageNumber={pageNumber}\r\n                  width={isMobile ? 300 : 800}\r\n                  renderTextLayer={!isMobile}\r\n                  renderAnnotationLayer={false}\r\n                  style={{ maxWidth: 'min-content' }}\r\n                />\r\n              </Document>\r\n            )}\r\n            <div style={{ marginTop: '20px', display: 'flex', justifyContent: 'center' }}>\r\n              <IconButton onClick={handlePreviousPage} disabled={pageNumber <= 1}>\r\n                <ChevronLeftIcon />\r\n              </IconButton>\r\n              <IconButton\r\n                onClick={handleNextPage}\r\n                disabled={pageNumber >= numPages[currentFileIndex]}\r\n              >\r\n                <ChevronRightIcon />\r\n              </IconButton>\r\n            </div>\r\n          </Grid>\r\n          {selectedFiles.length > 0 && (\r\n            <Grid item xs={12} sm={3} className={`miniatures ${classes.miniatures}`}>\r\n              <Paper style={{ maxHeight: '70vh', overflowY: 'auto' }}>\r\n                <List>\r\n                  {selectedFiles.map((file, index) => {\r\n                    const isSelected = selectedDocument === index;\r\n                    const documentName = documentNames[index];\r\n\r\n                    const documentButton = (\r\n                      <ListItem\r\n                        key={index}\r\n                        button\r\n                        onClick={() => handleDocumentSelect(index)}\r\n                        className={classes.documentButton}\r\n                      >\r\n                        <ListItemText primary={documentName} />\r\n                      </ListItem>\r\n                    );\r\n\r\n                    const numPagesForFile = numPages[index];\r\n                    const thumbnailPromises = Array.from({ length: numPagesForFile }, (_, i) => (\r\n                      <ListItem\r\n                        key={i}\r\n                        button\r\n                        onClick={() => handleThumbnailClick(i + 1)}\r\n                        className={classes.thumbnailStyle}\r\n                      >\r\n                        <ListItemIcon>\r\n                          <Document file={file}>\r\n                            <Page\r\n                              pageNumber={i + 1}\r\n                              width={170}\r\n                              renderTextLayer={!isMobile}\r\n                              renderAnnotationLayer={false}\r\n                              style={{ maxWidth: 'min-content' }}\r\n                            />\r\n                          </Document>\r\n                        </ListItemIcon>\r\n                      </ListItem>\r\n                    ));\r\n\r\n                    return isSelected ? [documentButton, ...thumbnailPromises] : documentButton;\r\n                  })}\r\n                </List>\r\n              </Paper>\r\n              <div\r\n                style={{\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  alignItems: 'center',\r\n                  width: '100%',\r\n                }}\r\n              >\r\n                <Button\r\n                  onClick={handleAddSignatureField}\r\n                  variant=\"contained\"\r\n                  className={classes.addButton}\r\n                >\r\n                  Agregar campo de firma\r\n                </Button>\r\n                <Button\r\n                  onClick={handleOpenModal}\r\n                  variant=\"contained\"\r\n                  style={{\r\n                    marginTop: '40px',\r\n                    fontSize: '1.1rem',\r\n                    backgroundColor: '#FF8C00',\r\n                    color: '#ffffff',\r\n                  }}\r\n                >\r\n                  Firmar\r\n                </Button>\r\n              </div>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      )}\r\n      {selectedFiles.length > 0 && (\r\n        <IconButton\r\n          onClick={handleBackToUploader}\r\n          style={{ position: 'absolute', top: '10px', left: '10px' }}\r\n        >\r\n          <ChevronLeftIcon /> Volver a seleccionar archivos\r\n        </IconButton>\r\n      )}\r\n      {/* Renderizar todos los campos de firma basados en el estado */}\r\n      {currentDocumentId &&\r\n        signatureFields[currentDocumentId]\r\n          ?.filter((field) => field.pageNumber === pageNumber)\r\n          .map((field) => (\r\n            <SignatureField\r\n              key={field.id}\r\n              id={field.id}\r\n              documentId={currentDocumentId}\r\n              pageNumber={pageNumber}\r\n              initialPosition={{ x: field.x, y: field.y }}\r\n              size={{ width: field.width, height: field.height }}\r\n              onRemove={() => handleRemoveSignatureField(currentDocumentId, field.id)}\r\n              onPositionChange={(x, y) => handlePositionChange(currentDocumentId, field.id, x, y)}\r\n              onSizeChange={(width, height) =>\r\n                handleSizeChange(currentDocumentId, field.id, width, height)\r\n              }\r\n              backgroundColor={field.backgroundColor}\r\n            />\r\n          ))}\r\n      <ModalFirmaSuccess\r\n        open={modalOpen}\r\n        handleClose={handleCloseModal}\r\n        navigateHome={navigateHome}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PdfViewer;\r\n","import PdfViewer from 'app/components/PDFViewer/PDFViewer';\r\n\r\nconst Analytics = () => {\r\n  return (\r\n    <>\r\n      <h1\r\n        style={{\r\n          textAlign: 'center',\r\n          marginTop: '50px',\r\n          marginBottom: '50px',\r\n          color: 'rgb(226 113 17)',\r\n        }}\r\n      >\r\n        Firma Ya\r\n      </h1>\r\n      <PdfViewer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Analytics;\r\n"],"sourceRoot":""}