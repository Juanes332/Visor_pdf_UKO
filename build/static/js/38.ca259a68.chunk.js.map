{"version":3,"sources":["app/views/sessions/JwtLogin.jsx"],"names":["FlexBox","styled","Box","display","alignItems","FullScreenWrapper","height","HalfScreen","flex","padding","HalfScreenContent","flexDirection","justifyContent","textAlign","FormScreen","width","background","marginBottom","initialValues","email","password","remember","validationSchema","Yup","shape","min","required","JwtLogin","theme","useTheme","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","loading","setLoading","login","useAuth","isMobile","useMediaQuery","breakpoints","down","handleFormSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","t0","stop","_x","apply","arguments","_jsxs","children","_jsx","style","Typography","variant","color","gutterBottom","align","Formik","onSubmit","_ref2","errors","touched","handleChange","handleBlur","handleSubmit","maxWidth","TextField","fullWidth","size","type","name","label","onBlur","value","onChange","helperText","error","Boolean","sx","mb","gap","Checkbox","checked","NavLink","to","LoadingButton","my","backgroundColor"],"mappings":"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","file":"static/js/38.ca259a68.chunk.js","sourcesContent":["import { LoadingButton } from '@mui/lab';\r\nimport { Grid, TextField, useTheme, Typography, useMediaQuery, Checkbox } from '@mui/material';\r\nimport { Box, styled } from '@mui/system';\r\nimport useAuth from 'app/hooks/useAuth';\r\nimport { Formik } from 'formik';\r\nimport { useState } from 'react';\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\n\r\nconst FlexBox = styled(Box)({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n});\r\n\r\nconst FullScreenWrapper = styled(Box)({\r\n  display: 'flex',\r\n  height: '100vh',\r\n});\r\n\r\nconst HalfScreen = styled(Box)({\r\n  flex: '1',\r\n  padding: '32px',\r\n});\r\n\r\nconst HalfScreenContent = styled(Box)({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  height: '100%',\r\n  textAlign: 'center',\r\n});\r\n\r\nconst ImagePlaceholder = styled(Box)({\r\n  height: '150px',\r\n  width: '150px',\r\n  background: '#ccc',\r\n  marginBottom: '20px',\r\n});\r\n\r\nconst FormScreen = styled(Box)({\r\n  flex: '1',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  padding: '32px',\r\n});\r\n\r\nconst initialValues = {\r\n  email: 'pruebastodos@yopmail.com',\r\n  password: 'dummyPass',\r\n  remember: true,\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  password: Yup.string()\r\n    .min(6, 'Password must be 6 character length')\r\n    .required('Password is required!'),\r\n  email: Yup.string().email('Invalid Email address').required('Email is required!'),\r\n});\r\n\r\nconst JwtLogin = () => {\r\n  const theme = useTheme();\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n  const { login } = useAuth();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down(700));\r\n\r\n  const handleFormSubmit = async (values) => {\r\n    setLoading(true);\r\n    try {\r\n      await login(values.email, values.password);\r\n      navigate('/');\r\n    } catch (e) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FullScreenWrapper>\r\n      {!isMobile && (\r\n        <HalfScreen style={{ background: 'lightgray' }}>\r\n          <HalfScreenContent>\r\n            <h1>Transforma tu manera de firmar fácil, rápido y digital</h1>\r\n            <Typography variant=\"body2\" color=\"textSecondary\">\r\n              En un mundo acelerado, firmar documentos al estilo tradicional puede retrasar tus\r\n              decisiones clave\r\n            </Typography>\r\n          </HalfScreenContent>\r\n        </HalfScreen>\r\n      )}\r\n\r\n      <FormScreen>\r\n        <Typography variant=\"h4\" gutterBottom align=\"center\">\r\n          Inicia sesión\r\n        </Typography>\r\n        <Typography\r\n          variant=\"body2\"\r\n          color=\"textSecondary\"\r\n          align=\"center\"\r\n          style={{ marginBottom: '40px' }}\r\n        >\r\n          Lo utilizaremos para iniciar sesión o para crear una cuenta si aún no tienes una\r\n        </Typography>\r\n\r\n        <Formik\r\n          onSubmit={handleFormSubmit}\r\n          initialValues={initialValues}\r\n          validationSchema={validationSchema}\r\n        >\r\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\r\n            <form onSubmit={handleSubmit} style={{ width: '60%', maxWidth: '400px' }}>\r\n              <TextField\r\n                fullWidth\r\n                size=\"small\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                variant=\"outlined\"\r\n                onBlur={handleBlur}\r\n                value={values.email}\r\n                onChange={handleChange}\r\n                helperText={touched.email && errors.email}\r\n                error={Boolean(errors.email && touched.email)}\r\n                sx={{ mb: 3 }}\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                size=\"small\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                label=\"Password\"\r\n                variant=\"outlined\"\r\n                onBlur={handleBlur}\r\n                value={values.password}\r\n                onChange={handleChange}\r\n                helperText={touched.password && errors.password}\r\n                error={Boolean(errors.password && touched.password)}\r\n                sx={{ mb: 1.5 }}\r\n              />\r\n              <FlexBox justifyContent=\"space-between\" sx={{ width: '100%', mb: 2 }}>\r\n                <FlexBox gap={1}>\r\n                  <Checkbox\r\n                    size=\"small\"\r\n                    name=\"remember\"\r\n                    onChange={handleChange}\r\n                    checked={values.remember}\r\n                    sx={{ padding: 0 }}\r\n                    style={{ color: '#7e7e7e' }}\r\n                  />\r\n                  <Typography variant=\"body2\" style={{ color: '#7e7e7e' }}>\r\n                    Remember Me\r\n                  </Typography>\r\n                </FlexBox>\r\n                <NavLink to=\"/session/forgot-password\" style={{ color: '#7e7e7e' }}>\r\n                  Forgot password?\r\n                </NavLink>\r\n              </FlexBox>\r\n              <LoadingButton\r\n                type=\"submit\"\r\n                loading={loading}\r\n                variant=\"contained\"\r\n                sx={{ my: 2, width: '100%' }}\r\n                style={{ backgroundColor: '#FF8548' }}\r\n              >\r\n                Login\r\n              </LoadingButton>\r\n              <Typography variant=\"body2\" align=\"center\">\r\n                Don't have an account?\r\n                <NavLink to=\"/session/signup\" style={{ color: '#fc7e3f' }}>\r\n                  Register\r\n                </NavLink>\r\n              </Typography>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n      </FormScreen>\r\n    </FullScreenWrapper>\r\n  );\r\n};\r\n\r\nexport default JwtLogin;\r\n"],"sourceRoot":""}